@inject UserService UserService
@inject AuthProvider AuthProvider
@inject NavigationManager NavigationManager

<div class="bottom-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">FilmFinder</a>

        @if (UserService.LoggedIn)
        {
            <!-- Logout Button (visible only when the user is logged in) -->
            <button class="btn btn-outline-light" @onclick="Logout">Logout</button>
        }
    </div>
</div>



<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if(UserService.LoggedIn){
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Page">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Favouris
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="recherche">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Recherche
                </NavLink>
            </div>
        }
        @if (!UserService.LoggedIn){
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Connexion">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Connexion
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Inscription">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Inscription
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    protected override void OnInitialized()
    {
        UserService.OnLoginStatusChanged += StateHasChanged;
    }

    public void Dispose()
    {
        UserService.OnLoginStatusChanged -= StateHasChanged;
    }
        private void Logout()
    {
        AuthProvider.Logout();
        UserService.LoggedIn = false;
        NavigationManager.NavigateTo("/Connexion");
    }
}
